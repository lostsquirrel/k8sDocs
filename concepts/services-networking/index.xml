<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Service, 负载均衡, 网络 on Kubernetes</title>
    <link>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/</link>
    <description>Recent content in Service, 负载均衡, 网络 on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Service</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/service/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/service/</guid>
      <description>No need to modify your application to use an unfamiliar service discovery mechanism. Kubernetes gives Pods their own IP addresses and a single DNS name for a set of Pods, and can load-balance across them. content_type: concept weight: 10 --- -- 以网络服务的方式让一个由一组 PodPod 表示集群中运行的一组容器的集</description>
    </item>
    
    <item>
      <title>Service Topology</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/service-topology/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/service-topology/</guid>
      <description>Routing of service traffic based upon cluster topology. content_type: concept weight: 10 --- -- 功能特性状态: Kubernetes v1.17 [alpha] _Service Topology_ enables a service to route traffic based upon the Node topology of the cluster. For example, a service can specify that traffic be preferentially routed to endpoints that are on the same Node as the client, or in the same availability zone. -- 功</description>
    </item>
    
    <item>
      <title>Service 和 Pod 的 DNS</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/dns-pod-service/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/dns-pod-service/</guid>
      <description>本文简述 k8s 对 DNS 的支持 介绍 k8s DNS 先在集群中部署了一个 DNS 的 Pod 和 Service， 并配置 kubelet 让每一个容器都使用 DNS Service 的 IP 来解析 DNS 名称。 啥东西会有 DNS 名称? 集</description>
    </item>
    
    <item>
      <title>通过 Service 连接应用</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/connect-applications-service/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/services-networking/connect-applications-service/</guid>
      <description>连接到容器的 k8s 模型 到目前为止我们有一个持续运行的多副本应用，我们可以把它暴露到一个网络中。 在讨论 k8s 的网络实现前， 值得花点时间来看看 Docker 中普通的</description>
    </item>
    
  </channel>
</rss>