<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器 on Kubernetes</title>
    <link>https://lostsquirrel.github.io/k8sDocs/concepts/containers/</link>
    <description>Recent content in 容器 on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 19 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lostsquirrel.github.io/k8sDocs/concepts/containers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>镜像</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/containers/00-images/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/containers/00-images/</guid>
      <description>一个容器镜像就是构建应用的二进制数据和应用所以需要的依赖。 容器镜像是一个可独立运行的可执行软件包，并定义了清楚的运行环境。 通常是用户创建一个</description>
    </item>
    
    <item>
      <title>容器环境</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/containers/01-container-environment/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/containers/01-container-environment/</guid>
      <description>本文主要介绍以环境提供容器的资源信息 容器内的环境变量 k8s 环境为容器提供了一些重要的资源信息： 一个包含镜像和一个或多个卷组合成的文件系统 关于容器</description>
    </item>
    
    <item>
      <title>Runtime Class</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/containers/02-runtime-class/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/containers/02-runtime-class/</guid>
      <description>功能特性状态: Kubernetes v1.14 [beta] 本文介绍 RuntimeClass 资源和运行时选择机制。 RuntimeClass 是一个选择容器运行时配置的特性。而容器运行时配置则用于运行 Pod 中的容器的。 Motivation 用户可以在不</description>
    </item>
    
    <item>
      <title>容器生命周期钩子</title>
      <link>https://lostsquirrel.github.io/k8sDocs/concepts/containers/container-lifecycle-hooks/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://lostsquirrel.github.io/k8sDocs/concepts/containers/container-lifecycle-hooks/</guid>
      <description>本文主要介绍如何使用容器生命周期钩子框架来实现由 kubelet 管理的容器通过在管理过程中的生命周期事件来触发代理运行。 概述 与许多编程语言的框架的组件有生</description>
    </item>
    
  </channel>
</rss>